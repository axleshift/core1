import{r as c,R as N,j as e}from"./D3kDgYDB.js";import{R as E}from"./D0iU1EWp.js";import{F as l,R as S,S as R,T,U as P,V as z}from"./DY2y_89w.js";import{a as $,V as m,b as p}from"./PoaSw7hI.js";import{E as u}from"./URk2IvX2.js";import{C as B,K as F,L as y,p as V,R as i,n as b,l as D}from"./BRioXSKG.js";import"./CNSOrHVr.js";import"./WyM-ksIe.js";import"./dB90dn3U.js";import"./Dw8pycEM.js";import"./8JwjhRSi.js";import"./o5tV6Bm-.js";import"./CWoBZRFf.js";import"./tpRZQFqq.js";import"./CzFDRTuY.js";import"./CQ-yZ3vu.js";import"./BmHAl9XU.js";import"./B6-gGlhp.js";import"./DzfTGk6K.js";import"./hKczlkOd.js";import"./CXnULsF_.js";import"./CCb-kr4I.js";import"./Cz0CWeBA.js";import"./Cp7XljvA.js";import"./BQBsAJpH.js";import"./DRFurTTo.js";import"./BZxJdD1U.js";const ue=()=>{const[x,o]=c.useState(!0),d=N.useRef(),[j,g]=c.useState(!0),[k,K]=c.useState(!1),[r,n]=c.useState({token:"",whitelist_ip:[]}),A=()=>{g(t=>!t)},f=async()=>{try{await navigator.clipboard.writeText(r),alert("API Key copied!")}catch(t){console.log(t),alert("Failed... no idea why.")}},w=async()=>{o(!0);const t=await d.current.executeAsync();await axios.post(`${m}/api/v1/auth/token/new`,{recaptcha_ref:t},{headers:{Authorization:`Bearer ${cookies.get(p)}`}}).then(s=>n(a=>({...a,token:s.data.token}))).catch(s=>{console.error(s);const a=u[s.status]||"Internal Application Error";alert(a)}).finally(()=>o(!1))},v=async()=>{await axios.get(`${m}/api/v1/auth/token/`,{headers:{Authorization:`Bearer ${cookies.get(p)}`}}).then(t=>{t.data.error||n(t.data)}).catch(t=>{console.error(t);const s=u[t.status]||"Internal Application Error";alert(s)}).finally(()=>o(!1))},C=()=>{if(!Array.isArray(r.whitelist_ip))return n(t=>({...t,whitelist_ip:[""]}));if(r.whitelist_ip.length<6)return n(t=>({...t,whitelist_ip:[...t.whitelist_ip,""]}));alert("Max number of whitelisted ip address reached")},_=(t,s)=>{const a=[...r.whitelist_ip];a[t]=s,n(h=>({...h,whitelist_ip:a}))},I=async t=>{t.preventDefault(),o(!0);const s=await d.current.executeAsync();await axios.post(`${m}/api/v1/auth/token/whitelist-ip`,{whitelist_ip:r.whitelist_ip,recaptcha_ref:s},{headers:{Authorization:`Bearer ${cookies.get(p)}`}}).then(a=>{if(a.data.error)return alert(a.data.error);alert("done")}).catch(a=>{console.error(a);const h=u[a.status]||"Internal Application Error";alert(h)}).finally(()=>o(!1))};return c.useEffect(()=>{v()},[]),e.jsxs("div",{children:[x&&e.jsx("div",{className:"loading-overlay",children:e.jsx(B,{color:"primary",variant:"grow"})}),e.jsx(E,{ref:d,size:"invisible",sitekey:$}),!x&&e.jsxs(F,{xs:{cols:1},sm:{cols:2},children:[e.jsxs(y,{children:[e.jsx("h4",{children:"Auth token"}),!r.token&&e.jsx("div",{className:"text-center border rounded mb-4",children:e.jsxs("div",{className:"p-1 p-md-5 my-5 my-md-0",children:[e.jsx(V,{src:"/images/threat.png",fluid:!0,width:"50%"}),e.jsx("h4",{children:"There was no Auth Token"}),e.jsx(i,{color:"primary",size:"sm",onClick:w,children:"Generate Token"})]})}),r.token&&e.jsx("div",{className:"text-center border rounded mb-4",children:e.jsxs("div",{className:"p-2 p-md-3",children:[e.jsxs("div",{className:"d-flex mb-3",children:[e.jsx(b,{className:j?"blurred":"",value:r.token,"aria-describedby":"basic-addon"}),e.jsx(i,{className:"ms-2",onClick:A,children:e.jsx(l,{icon:j?S:R})}),e.jsx(i,{className:"ms-2",onClick:f,children:e.jsx(l,{icon:T})})]}),e.jsx(i,{color:"primary",size:"sm",onClick:w,children:"Generate new token"})]})})]}),e.jsxs(y,{children:[e.jsxs("div",{style:{display:"flex",justifyContent:"space-between",alignItems:"center"},children:[e.jsx("h4",{children:"Ip address"}),e.jsxs(i,{color:"success",size:"sm",className:"text-white",onClick:C,disabled:k,children:[e.jsx(l,{icon:P})," Create"]})]}),r.whitelist_ip.length===0&&e.jsx("div",{className:"text-center border rounded mb-4",children:e.jsx("div",{className:"p-2 p-md-3 my-5 my-md-0",children:e.jsx("h6",{children:"There was no Whitelisted IP Addresses"})})}),r.whitelist_ip.length!==0&&e.jsx("div",{className:"text-center border rounded mb-4",children:e.jsx("div",{className:"p-2 p-md-3",children:e.jsxs(D,{onSubmit:I,children:[r.whitelist_ip.map((t,s)=>e.jsxs("div",{className:"d-flex mb-2",children:[e.jsx(b,{value:t,onChange:a=>_(s,a.target.value),placeholder:`192.168.0.${s+1}`}),e.jsx(i,{color:"danger",className:"text-white ms-2",onClick:f,children:e.jsx(l,{icon:z})})]},s)),e.jsx(i,{type:"submit",color:"primary",className:"d-block me-2 rounded",children:"Save changes"})]})})})]})]})]})};export{ue as default};
