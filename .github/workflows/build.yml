name: Build

on:
    push:
        branches: ["main"]
    workflow_dispatch:

jobs:
  build:
    runs-on: 'ubuntu-latest'
    services:
      mongo:
        image: mongo:latest
        ports:
          - 27017:27017
        options: >-
          --health-cmd "mongo --eval 'db.runCommand({ ping: 1 })'"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
      - name: Clone repository
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 22

      - name: Wait for MongoDB to start
        run: |
          echo "Waiting for MongoDB..."
          until nc -z localhost 27017; do sleep 1; done
        
      - name: Set up environment
        run: |
          cd client
          echo "VITE_APP_API_URL=${{ secrets.APP_API_URL }}" >> .env
          echo "VITE_APP_RECAPTCHA_SITE_KEY=${{ secrets.APP_RECAPTCHA_SITE_KEY }}" >> .env
          echo "VITE_APP_SESSION=${{ secrets.APP_SESSION }}" >> .env
          echo "VITE_APP_NODE_ENV=${{ secrets.APP_NODE_ENV }}" >> .env
          echo "VITE_APP_SENTRY_DNS=${{ secrets.APP_SENTRY_DNS }}" >> .env
          echo "VITE_APP_GOOGLE_ANALYTICS=${{ secrets.APP_GOOGLE_ANALYTICS }}" >> .env
          echo "VITE_APP_GOOGLE_MAP=${{ secrets.APP_GOOGLE_MAP }}" >> .env
          echo "VITE_APP_FIREBASE_API_KEY=${{ secrets.APP_FIREBASE_API_KEY }}" >> .env
          echo "VITE_APP_FIREBASE_AUTH_DOMAIN=${{ secrets.APP_FIREBASE_AUTH_DOMAIN }}" >> .env
          echo "VITE_APP_FIREBASE_PROJECT_ID=${{ secrets.APP_FIREBASE_PROJECT_ID }}" >> .env
          echo "VITE_APP_FIREBASE_STORAGE_BUCKET=${{ secrets.APP_FIREBASE_STORAGE_BUCKET }}" >> .env
          echo "VITE_APP_FIREBASE_MESSAGING_SENDING_ID=${{ secrets.APP_FIREBASE_MESSAGING_SENDING_ID }}" >> .env
          echo "VITE_APP_FIREBASE_APP_ID=${{ secrets.APP_FIREBASE_APP_ID }}" >> .env
          echo "VITE_APP_FIREBASE_MEASUREMENT_ID=${{ secrets.APP_FIREBASE_MEASUREMENT_ID }}" >> .env
          cd ../server
          echo "MONGO_DB=core1" >> .env
          echo "MONGO_URL=mongodb://localhost:27017" >> .env
          echo "RECAPTCHA_SECRET=${{ secrets.RECAPTCHA_SECRET }}" >> .env
          echo "NODE_ENV=development" >> .env
          echo "EXPRESS_PORT=5051" >> .env
          echo "REACT_APP_ORIGIN=::1" >> .env
          echo "API_RATE_LIMIT=30" >> .env
          echo "API_RATE_DELAY=600" >> .env
          echo "API_EXTERNAL_RATE_LIMIT=1000}" >> .env
          echo "API_EXTERNAL_RATE_DELAY=600}" >> .env
        
      - name: Install NPM dependencies
        run: |
          npm i
          npm run setup

      - name: Executing lint test
        run: npm run lint
      
      - name: Executing jest & mocha
        run: npm run test

      - name: Build frontend
        run: cd client && npm run build

      - name: Push frontend
        id: push_directory_frontend
        uses: cpina/github-action-push-to-another-repository@main
        env:
          API_TOKEN_GITHUB: ${{ secrets.API_TOKEN_GITHUB }}
        with:
          source-directory: client/build
          destination-github-username: 'freight-capstone'
          destination-repository-name: 'core1'
          user-email: mrepol742@gmail.com
          commit-message: Production
          target-branch: core1-frontend

      - name: Push backend
        id: push_directory_backend
        uses: cpina/github-action-push-to-another-repository@main
        env:
          API_TOKEN_GITHUB: ${{ secrets.API_TOKEN_GITHUB }}
        with:
          source-directory: server/
          destination-github-username: 'freight-capstone'
          destination-repository-name: 'core1'
          user-email: mrepol742@gmail.com
          commit-message: Production
          target-branch: core1-backend